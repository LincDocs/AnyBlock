import{_ as i,c as a,a as l,o as n}from"./app-BualgUc6.js";const t="/AnyBlock/assets/image-Cz8T4rzE.png",e="/AnyBlock/assets/image-1-CL7QFHIs.png",c={};function h(p,s){return n(),a("div",null,s[0]||(s[0]=[l('<h1 id="如何修改样式" tabindex="-1"><a class="header-anchor" href="#如何修改样式"><span>如何修改样式</span></a></h1><h2 id="在哪个位置进行修改" tabindex="-1"><a class="header-anchor" href="#在哪个位置进行修改"><span>在哪个位置进行修改？</span></a></h2><ol><li>(不推荐) 进入插件所在文件夹，修改其 <code>styles.css</code>。这样的话插件如果有样式方面的更新，会出现问题</li><li>(推荐) Obsidian设置 &gt; 外观 &gt; CSS代码片段，在这里添加和编辑css内容。后文会有具体的教程</li><li>(推荐) 不修改原有的插件内部class，而是使用 <code>addClass()</code> 处理器添加新class，然后再根据自己的新class去修改外观</li></ol><p>不会CSS？简易教程见：https://www.runoob.com/css/css-tutorial.html</p><h2 id="一个具体步骤示例" tabindex="-1"><a class="header-anchor" href="#一个具体步骤示例"><span>一个具体步骤示例</span></a></h2><ol><li>创建css片段</li></ol><p>首先进入css片段文件夹，并创建css片段</p><p><img src="'+t+`" alt="Alt text" loading="lazy"></p><p>并在该文件夹创建一个文件：<code>anyblock.css</code> (名字任意起)，这就是css片段文件</p><p>然后进入编辑 (可以用记事本)</p><ol start="2"><li>添加css内容</li></ol><p>例如我们修改tab标签的颜色 (可以添加css)</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.theme-dark</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 黑暗模式 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    --ab-tab-root-bg-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 修改css变量的内容 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.theme-light</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 明亮模式 */</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">   --ab-tab-root-bg-color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">blue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 或者直接添加css内容 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">div</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> p</span><span style="--shiki-light:#A626A4;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">green</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> !important</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* 把所有字体都改成绿色 */</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>启用css片段</li></ol><p>返回ob设置的地方，刷新就能看到刚刚添加的css片段。然后开启就生效了</p><p><img src="`+e+'" alt="Alt text" loading="lazy"></p><h2 id="修改css注意项" tabindex="-1"><a class="header-anchor" href="#修改css注意项"><span>修改css注意项</span></a></h2><p>如果有css变量，推荐修改css变量优先</p>',18)]))}const o=i(c,[["render",h]]),r=JSON.parse('{"path":"/docs/dev%20docs/01.%20%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F.html","title":"如何修改样式","lang":"zh-CN","frontmatter":{"description":"如何修改样式 在哪个位置进行修改？ (不推荐) 进入插件所在文件夹，修改其 styles.css。这样的话插件如果有样式方面的更新，会出现问题 (推荐) Obsidian设置 > 外观 > CSS代码片段，在这里添加和编辑css内容。后文会有具体的教程 (推荐) 不修改原有的插件内部class，而是使用 addClass() 处理器添加新class，然...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/AnyBlock/docs/dev%20docs/01.%20%E5%A6%82%E4%BD%95%E4%BF%AE%E6%94%B9%E6%A0%B7%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"AnyBlock"}],["meta",{"property":"og:title","content":"如何修改样式"}],["meta",{"property":"og:description","content":"如何修改样式 在哪个位置进行修改？ (不推荐) 进入插件所在文件夹，修改其 styles.css。这样的话插件如果有样式方面的更新，会出现问题 (推荐) Obsidian设置 > 外观 > CSS代码片段，在这里添加和编辑css内容。后文会有具体的教程 (推荐) 不修改原有的插件内部class，而是使用 addClass() 处理器添加新class，然..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何修改样式\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/AnyBlock/\\"}]}"]]},"git":{},"readingTime":{"minutes":1.2,"words":361},"filePathRelative":"docs/dev docs/01. 如何修改样式.md","excerpt":"\\n<h2>在哪个位置进行修改？</h2>\\n<ol>\\n<li>(不推荐) 进入插件所在文件夹，修改其 <code>styles.css</code>。这样的话插件如果有样式方面的更新，会出现问题</li>\\n<li>(推荐) Obsidian设置 &gt; 外观 &gt; CSS代码片段，在这里添加和编辑css内容。后文会有具体的教程</li>\\n<li>(推荐) 不修改原有的插件内部class，而是使用 <code>addClass()</code> 处理器添加新class，然后再根据自己的新class去修改外观</li>\\n</ol>\\n<p>不会CSS？简易教程见：https://www.runoob.com/css/css-tutorial.html</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"docs/dev docs/01. 如何修改样式.md","value":{"title":"01. 如何修改样式","path":"docs/dev docs/01. 如何修改样式.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{o as comp,r as data};
