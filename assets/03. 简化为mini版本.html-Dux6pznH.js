import{_ as s,c as a,b as n,o as t}from"./app-DiWOXxft.js";const e={};function l(h,i){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="简化为mini版本" tabindex="-1">简化为mini版本</h1><div class="callout" data-callout="warning"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path><path d="M12 9v4"></path><path d="M12 17h.01"></path></svg></div><div class="callout-title-inner">Warning</div></div><div class="callout-content"><p></p><p>V3.2.2 中，官方完善了编译工作流程，能自动化编译和发布mini版本。</p><p>你可以到 <a href="https://github.com/any-block/obsidian-any-block-min" target="_blank" rel="noopener noreferrer">obsidian-any-block-min</a> 仓库中，手动下载或使用BRAT插件自动下载/更新。</p><p>也可以在action标签也中，找到每次commit对应的编译的min版本 (beta尝鲜)</p><p>但该页面依然保留，提供一些自定义的参考</p></div></div><p>在 AnyBlock V3.0.5 版本中，插件的默认大小足有 8.8MB，这很大。主要是因为其内置了一些比较大的库。像mermaid和markmap处理器分别让插件多占了 7.1 和 1.3 MB。而有很多不用的库可以进行去除，也可以进行一些优化以减少大小。</p><h2 id="减少不需要使用的处理器" tabindex="-1">减少不需要使用的处理器</h2><p>在源代码的 <code>/src/README.md</code> 中，我们知道了如何将源代码重新编译成插件所需要的 main.js 等文件。</p><p>这里我们说下如何减少插件体积。</p><p>打开 <code>/src/ABConverter/index.ts</code> 文件，我们可以看到：</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 转换器模块</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ABConvertManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./ABConvertManager&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 加载所有转换器 (都是可选的，可自行增删。当然，如果A转换器依赖B转换器，那么你导入A必然导入B)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_text&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_code&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_list&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_c2list&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_table&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_dir_tree&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_deco&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_ex&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_mdit_container&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_plantuml&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 可选建议：156.3KB。由于在线渲染，相对下面两个没那么高</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_mermaid&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 可选建议：非 min 环境下 7.1MB</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;./converter/abc_markmap&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 可选建议：1.3MB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>假如你不需要使用这两个功能，你可以把对应的两行代码注释掉，并重新编译。重新编译后的插件大小<strong>只有200KB左右</strong>，迷你了很多！</p><p>同理，如果你不需要插件的其他功能，也可以进一步缩小。反之，你也可以反过来操作，扩展一些新的处理器。</p><h2 id="将内置mermaid改为ob-mermaid" tabindex="-1">将内置mermaid改为ob mermaid</h2><p>Q：关于为什么要内置mermaid，ob本身不是有吗？<br> A：因为我做这个插件的时候，ob内置的mermaid版本非常老旧，像mermaid markmap的一些功能是不具备。二是因为内置的情况下，渲染速度会更快上一些。</p><p>Q：那现在新版本ob的mermaid已经比较新了，markmap功能也内置了。我是否可以在不减少mermaid功能的前提下，去除内置mermaid的情况下依然能够使用对应的功能<br> A：可以，但需要自己修改一下相关代码。比如将mermaid的行为重定位为在外面套一层代码块被交回给Obsidian进行渲染。具体方法如下：</p><p>将 <code>abc_mermiad.ts</code> 文件做以下修改：</p><ol><li>注释掉：<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-ts"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> mermaid</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;mermaid&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> mindmap</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;@mermaid-js/mermaid-mindmap&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> initialize</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> mermaid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">registerExternalDiagrams</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">mindmap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> mermaid_init</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> async</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>将 <code>render_mermaidText</code> 方法中的方法一（&quot;自己渲&quot;）注释掉，将注释方法二（&quot;给环境渲&quot;）解除注释</li><li>然后重新编译就可以了</li></ol>`,15)]))}const r=s(e,[["render",l]]),k=JSON.parse('{"path":"/docs/dev%20docs/03.%20%E7%AE%80%E5%8C%96%E4%B8%BAmini%E7%89%88%E6%9C%AC.html","title":"简化为mini版本","lang":"zh-CN","frontmatter":{"description":"简化为mini版本 Warning V3.2.2 中，官方完善了编译工作流程，能自动化编译和发布mini版本。 你可以到 obsidian-any-block-min 仓库中，手动下载或使用BRAT插件自动下载/更新。 也可以在action标签也中，找到每次commit对应的编译的min版本 (beta尝鲜) 但该页面依然保留，提供一些自定义的参考 在...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简化为mini版本\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/AnyBlock/docs/dev%20docs/03.%20%E7%AE%80%E5%8C%96%E4%B8%BAmini%E7%89%88%E6%9C%AC.html"}],["meta",{"property":"og:site_name","content":"AnyBlock"}],["meta",{"property":"og:title","content":"简化为mini版本"}],["meta",{"property":"og:description","content":"简化为mini版本 Warning V3.2.2 中，官方完善了编译工作流程，能自动化编译和发布mini版本。 你可以到 obsidian-any-block-min 仓库中，手动下载或使用BRAT插件自动下载/更新。 也可以在action标签也中，找到每次commit对应的编译的min版本 (beta尝鲜) 但该页面依然保留，提供一些自定义的参考 在..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":2.49,"words":748},"filePathRelative":"docs/dev docs/03. 简化为mini版本.md","excerpt":"\\n\\n<div class=\\"callout\\" data-callout=\\"warning\\">\\n<div class=\\"callout-title\\">\\n<div class=\\"callout-title-icon\\">\\n<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"24\\" height=\\"24\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\" class=\\"lucide lucide-alert-triangle\\"><path d=\\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\\"></path><path d=\\"M12 9v4\\"></path><path d=\\"M12 17h.01\\"></path></svg>\\n</div>\\n<div class=\\"callout-title-inner\\">Warning</div>\\n</div>\\n<div class=\\"callout-content\\"><p></p>\\n<p>V3.2.2 中，官方完善了编译工作流程，能自动化编译和发布mini版本。</p>\\n<p>你可以到 <a href=\\"https://github.com/any-block/obsidian-any-block-min\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">obsidian-any-block-min</a> 仓库中，手动下载或使用BRAT插件自动下载/更新。</p>\\n<p>也可以在action标签也中，找到每次commit对应的编译的min版本 (beta尝鲜)</p>\\n<p>但该页面依然保留，提供一些自定义的参考</p>\\n</div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"docs/dev docs/03. 简化为mini版本.md","value":{"title":"03. 简化为mini版本","path":"docs/dev docs/03. 简化为mini版本.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{r as comp,k as data};
